<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>RayG</title>
    <link>https://ray-g.github.io/</link>
    <description>Recent content on RayG</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 22 Jun 2018 20:37:09 +0800</lastBuildDate>
    
	<atom:link href="https://ray-g.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>机器学习基本概念</title>
      <link>https://ray-g.github.io/machinelearning/ml-basic-concepts/</link>
      <pubDate>Fri, 22 Jun 2018 20:37:09 +0800</pubDate>
      
      <guid>https://ray-g.github.io/machinelearning/ml-basic-concepts/</guid>
      <description>智能时代的到来 谈到比较火的概念，那么人工智能，深度学习以及区块链等都是最近比较火的关键字。 现如今，我们正处于信息时代之中，各种各样的数据正通</description>
    </item>
    
    <item>
      <title>Jupyter Notebook Shortcuts</title>
      <link>https://ray-g.github.io/others/jupyter-notebook-shortcuts/</link>
      <pubDate>Thu, 21 Jun 2018 21:23:29 +0800</pubDate>
      
      <guid>https://ray-g.github.io/others/jupyter-notebook-shortcuts/</guid>
      <description>Jupyter Notebook has 2 Modes: Edit Mode and Command Mode.
NOTE: If you are in Edit Mode, there is a pencil at the upper-right.
Switch between modes Enter to enter Edit Mode from Command Mode
ESC to return Command Mode from Edit Mode
Show and edit shortcuts Shortcuts can be show by Help -&amp;gt; Keyboard Shortcuts.
And the shortcuts is also editable Help -&amp;gt; Edit Keyboard Shortcuts.
Default Shortcuts Follow are the default shortcuts of both Command Mode and Edit Mode.</description>
    </item>
    
    <item>
      <title>初学Golang易犯的错误</title>
      <link>https://ray-g.github.io/golang/common-mistakes-for-newbies/</link>
      <pubDate>Tue, 12 Jun 2018 00:26:35 +0800</pubDate>
      
      <guid>https://ray-g.github.io/golang/common-mistakes-for-newbies/</guid>
      <description>Golang是Google推出的面向软件工程的，拥有GC的，高并发的语言。 初学Go的时候很可能犯一些错误，犯错误并不怕，可怕的是一直犯同一个</description>
    </item>
    
    <item>
      <title>机器真的可以学习吗？</title>
      <link>https://ray-g.github.io/machinelearning/is-ml-feasible/</link>
      <pubDate>Mon, 11 Jun 2018 00:26:35 +0800</pubDate>
      
      <guid>https://ray-g.github.io/machinelearning/is-ml-feasible/</guid>
      <description>在讨论机器是否可以学习之前，我们先来看看下面这个问题 什么是学习？ 在课堂上听老师讲课，是进行学习; 自己通过摸索总结得出经验，也是学习; 小朋友通</description>
    </item>
    
    <item>
      <title>Git Snippts</title>
      <link>https://ray-g.github.io/others/git-snippts/</link>
      <pubDate>Mon, 11 Jun 2018 00:05:12 +0800</pubDate>
      
      <guid>https://ray-g.github.io/others/git-snippts/</guid>
      <description> Fetch all submodules after clone From the root of the repo just run:
git submodule update --init  Sync fork # Step 1 clone fork git clone git@github.com:&amp;lt;USERNAME&amp;gt;/&amp;lt;FORK-REPO&amp;gt;.git # Step 2, cd to the repo git remote add upstream git://github.com/ORIGINAL-DEV-USERNAME/REPO-YOU-FORKED-FROM.git git fetch upstream git pull upstream master git push  </description>
    </item>
    
    <item>
      <title>Setting Up The Blog</title>
      <link>https://ray-g.github.io/others/setting-up-the-blog/</link>
      <pubDate>Sun, 10 Jun 2018 13:51:53 +0800</pubDate>
      
      <guid>https://ray-g.github.io/others/setting-up-the-blog/</guid>
      <description>This blog is built with Hugo and hosted on Github.
Setting up Hugo site Install Hugo First we should have a Hugo installed, Install Hugo, or just download the binary from github.com/gohugoio/hugo.
After Hugo installed, try verify it.
$ hugo version Hugo Static Site Generator v0.41 linux/amd64 BuildDate: 2018-05-25T16:57:20Z  Create a New Site Hugo can generate layout of a new site very easy:
$ hugo new site hugo-blog Congratulations!</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://ray-g.github.io/about/</link>
      <pubDate>Sun, 10 Jun 2018 12:51:53 +0800</pubDate>
      
      <guid>https://ray-g.github.io/about/</guid>
      <description> Ray Guo, a software engineer as well as a geek.
Previousily focus on C/C++ for many years, then turned into a full-stack engineer. Currently has worked with following technologies:
 C/C++ Golang Python Ruby Shell JavaScript Docker Angular VueJS D3.js TensorFlow Pandas etc.  Archivements Patents  Granted Dynamic call tracking method based on CPU interrupt instructions to improve disassembly quality of indirect calls  </description>
    </item>
    
  </channel>
</rss>