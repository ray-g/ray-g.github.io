<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mls on RayG</title>
    <link>https://ray-g.github.io/ml/</link>
    <description>Recent content in Mls on RayG</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 11 Jun 2018 00:26:35 +0800</lastBuildDate>
    
	<atom:link href="https://ray-g.github.io/ml/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>机器真的可以学习吗？</title>
      <link>https://ray-g.github.io/ml/is-ml-feasible/</link>
      <pubDate>Mon, 11 Jun 2018 00:26:35 +0800</pubDate>
      
      <guid>https://ray-g.github.io/ml/is-ml-feasible/</guid>
      <description>在讨论机器是否可以学习之前，我们先来看看下面这个问题
什么是学习？ 在课堂上听老师讲课，是进行学习; 自己通过摸索总结得出经验，也是学习; 小朋友通过模仿大人说话，从而学会说话，也是学习。
人自从出生以后，就一直在学习，一直在通过触觉，视觉以及听觉来观察感受所在的世界，并学习到各种技能，从而更加适应在这个世界中生存。
Herbert A. Simon 曾经对学习下过一个定义“如果一个系统能够通过执行某个过程改进它的性能，这就是学习。”
按照此定义，那么人类一直是在进行学习，其实不仅仅是人类，各种动物也是同样的方式在进行着对这个世界的学习。
那么对于机器的话，如果可以通过某种方法来提高机器的某些技能，那么机器也就是学会了学习了。
人是通过观察世界来学习到技能的，那么机器所能得到的只有数据，于是机器只能观察数据，就有了下表：
 人： 观察世界 ----&amp;gt; 通过学习 ----&amp;gt; 技能 机器： 观察数据 ----&amp;gt; 通过学习 ----&amp;gt; 技能  人所学得的技能是很好理解的，那么机器学得的是什么技能呢？
实践已经得出结论，机器可以学会如何区分垃圾邮件，识别图片的内容，听懂一段语音等等，并且现在大量的实践可以证明通过一些手段， 机器是可以提高这些各种各样的机器的技能的，所以，实践已经证明，机器是可以学习的，而且学得的技能甚至超越人类的平均水平。
机器真的可以学习吗？ 所以机器学习，就是从数据出发，经过一系列的过程，来提高机器在某一个方面的性能。
再具体一些，就是机器学习是要根据已有的数据集合 X，且该数据集合通过一种映射关系 f， 使得每一个 \(x \in X\) 和 \(y \in Y\) 都可以通过f映射，也就是 y = f(x)。 学习则是人为的给出一组假设集 H，使用数据集合 X，以及目标集合 Y，通过学习方法， 来找到H之中最好的一个g，使得 \( g(x) \approx f(x) \)。
但是，我们找到的这个g，是针对已知数据X中表现最好的一个，但是现实是我们需要处理的不仅仅是已知的 X， 因为如果仅仅需要处理已知的问题的话，那么将这些记录全部录入电脑就可以了，电脑最擅长的就是记忆了， 我们需要的其实是将g用来对X之外的未知数据集Z做出推论Y‘=g(Z)，我们找到的这个g真的没问题吗？
这个听起来机器学习似乎有点不那么靠谱了。
但是，现实中我们处理的数据是独立同分布的数据，即每个数据个体不会影响其它个体，且每个数据的个体的分布都是一样的， 这样才有一定的模式可供我们来学习，否则个体互相关联或分布都不一样的话，那每一个个体都是单独且互相不一样的存在，是无规律可言的。
在独立同分布的前提下，那么我们要处理的数据集X其实就是未知数据集Z的一个采样，也就是\( X \in Z \)。 我们要做的事情，也就是需要通过样本来推断整体，通过身边的已知事物来认识这个世界。听起来要好多了，因为我们人类一直都是这样做的。</description>
    </item>
    
  </channel>
</rss>